@page "/"
@inject HttpClient Http
@inject IMapper _mapper
@using AutoMapper
@using Domain
@using System.Diagnostics;
@using mumarket.DataContracts.Responses

<PageTitle>Mu Market</PageTitle>
@if (_sells != null)
{
    <SellDetail Sell="_selectedSell"></SellDetail>
    <SellSearch />
    <div class="grid">
        @foreach (var sell in _sells)
        {
            <SellCard Sell="sell" OnSelected="HandleSellSelected" />
        }
    </div>
    <div class="sword"></div>
}
else
{
    <p style="text-align:center"><img src="images/loader.gif" /><br />Loading new posts...</p>
}

@code {
    private IEnumerable<Sell>? _sells;
    private Sell? _selectedSell;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            var sells = await Http.GetFromJsonAsync<IEnumerable<SellResponse>>("sells");
            _sells = _mapper.Map<IEnumerable<Sell>>(sells?.DistinctBy(x => x.Post).OrderByDescending(x => x.CreatedAt));
        }
        catch (HttpRequestException ex)
        {
            Console.WriteLine($"There was a problem loading sells data: {ex.Message}");
        }
        await base.OnInitializedAsync();
    }

    private void HandleSellSelected(Sell sell)
    {
        _selectedSell = sell;
    }
}

